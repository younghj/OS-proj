// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address,
			a=lreg0,
			b=lreg1,
			c=lreg2,
			d=lreg3,
			e=lreg4,
			f=lreg5,
			g=lreg6,
			h=lreg7);
	
	Register(in=in,load=lreg0,out=reg0);
	Register(in=in,load=lreg1,out=reg1);
	Register(in=in,load=lreg2,out=reg2);
	Register(in=in,load=lreg3,out=reg3);
	Register(in=in,load=lreg4,out=reg4);
	Register(in=in,load=lreg5,out=reg5);
	Register(in=in,load=lreg6,out=reg6);
	Register(in=in,load=lreg7,out=reg7);
	
	Mux8Way16(
			a=reg0,
			b=reg1,
			c=reg2,
			d=reg3,
			e=reg4,
			f=reg5,
			g=reg6,
			h=reg7,
			sel=address,out=out);
}